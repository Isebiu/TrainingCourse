@page
@model Training.Pages.Admin.MenuItems.UpsertModel

<form method="post" enctype="multipart/form-data">
    <input asp-for="MenuItem.Id" hidden />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <div class="col-9">
                <h2 class="text-dark pl-3">
                    @(Model.MenuItem.Id != 0 ? "Update" : "Create") Menu Item
                </h2>
                <hr />


                <div class="mb-3 row">
                    <label asp-for="MenuItem.Name" class="p-0"></label>
                    <input asp-for="MenuItem.Name" class="form-control" />
                    <span asp-validation-for="MenuItem.Name" class="text-danger"></span>
                </div>
                <div class="mb-3 row">
                    <label asp-for="MenuItem.Description" class="p-0"></label>
                    <textarea asp-for="MenuItem.Description" class="form-control"> </textarea>
                    <span asp-validation-for="MenuItem.Description" class="text-danger"></span>
                </div>
                <div class="mb-3 row">
                    <label asp-for="MenuItem.Price" class="p-0"></label>
                    <input asp-for="MenuItem.Price" class="form-control" />
                    <span asp-validation-for="MenuItem.Price" class="text-danger"></span>
                </div>
                <div class="mb-3 row">
                    <label asp-for="MenuItem.Image" class="p-0"></label>
                    <input type="file" name="files" id="uploadBox" as class="form-control" />
                </div>
                <div class="mb-3 row">
                    <label asp-for="MenuItem.CategoryId" class="p-0"></label>
                    <select asp-for="MenuItem.CategoryId" asp-items="Model.CategoryList" class="form-select">
                        <option disabled selected>-Select Category-</option>
                    </select>
                    <span asp-validation-for="MenuItem.CategoryId" class="text-danger"></span>
                </div>
                <div class="mb-3 row">
                    <label asp-for="MenuItem.FoodTypeId" class="p-0"></label>
                    <select asp-for="MenuItem.FoodTypeId" asp-items="Model.FoodTypeList" class="form-select">
                        <option disabled selected>-Select Food Type-</option>
                    </select>
                    <span asp-validation-for="MenuItem.FoodTypeId" class="text-danger"></span>
                </div>

            </div>
            <div class="col-3">
                @if(Model.MenuItem.Id != 0)
                {
                        <img src="@Model.MenuItem.Image" width="100%" style="border-radius:5px; border:1px solid #bbb9b9"/>
                }
            </div>
        </div>
        @if(Model.MenuItem.Id!=0){
            <button type="submit" class="btn btn-dark">Update</button>
        }else{
            <button type="submit" onclick="return ValidateInput()" class="btn btn-dark">Create</button>
        }
       
        <a asp-page="Index" class="btn btn-secondary mx-2" style="width: 200px;">Back to the List</a>
    </div>
</form>
@section Scripts
{
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Dec 16, 2024:
            'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
            // Early access to document converters
            'importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });

        function ValidateInput(){
            if(document.getElementById("uploadBox").value==""){
                  Swal.fire({
                      icon: "error",
                      title: "Oops...",
                      text: "Must upload an image!",
                });
                return false;
            }
            return true;
        }



    </script>

    @{
        <partial name="_ValidationScriptsPartial" />
    }
}